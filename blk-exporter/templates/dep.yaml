apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: {{ .Values.namespaces }}
  name: blk-exporter
  labels:
    app: blk
    version: {{ .Values.image_api.tag }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: blk
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: blk
        version: {{ .Values.image_api.tag }}
    spec:
      containers:
      - name: blk-exporter
        image: {{ .Values.image_api.repository }}:{{ .Values.image_api.tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8081
          protocol: TCP
        env:
        {{- range $name, $value := .Values.env_api }}
        {{- if not (empty $value) }}
        - name: {{ $name | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources_api.cpu }}
            memory: {{ .Values.resources_api.memory }}
          limits:
            cpu: {{ .Values.resources_api.cpu_limit }}
            memory: {{ .Values.resources_api.memory_limit }}
        readinessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: 8081
        livenessProbe:
          timeoutSeconds: 5
          initialDelaySeconds: 50
          failureThreshold: 3
          tcpSocket:
            port: 8081
      - name: mongodb
        image: mongo:3.4.10
        command:
        - mongod
        - --smallfiles
        ports:
        - containerPort: 27017
          name: peer
        readinessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: 27017
        livenessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: 27017
      - name: ui-exporter
        image: {{ .Values.image_fe.image}}:{{ .Values.image_fe.tag}}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.env_fe.containerPort}}
          protocol: TCP
        env:
        - name: REACT_APP_EXPLORER
          value:  "{{ .Values.env_fe.REACT_APP_EXPLORER}}"
        # readinessProbe:
        #   timeoutSeconds: 2
        #   initialDelaySeconds: 5
        #   failureThreshold: 3
        #   tcpSocket:
        #     port: 5000
        # livenessProbe:
        #   timeoutSeconds: 2
        #   initialDelaySeconds: 5
        #   failureThreshold: 3
        #   tcpSocket:
        #     port: 5000
      nodeSelector:
        node: {{ .Values.env }}