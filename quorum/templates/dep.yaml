apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: {{ .Values.env }}
  name:  {{ .Values.node }}
  labels:
    app: {{ .Values.node }}
    version: {{ .Values.image_api.tag }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Values.node }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.node }}
        version: {{ .Values.image_api.tag }}
    spec:
      containers:
      - name: {{ .Values.node }}
        image: {{ .Values.image_api.repository }}:{{ .Values.image_api.tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort:  {{ .Values.port }}
          protocol: TCP
        env:
        {{- range $name, $value := .Values.env_api }}
        {{- if not (empty $value) }}
        - name: {{ $name | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources_api.cpu }}
            memory: {{ .Values.resources_api.memory }}
          limits:
            cpu: {{ .Values.resources_api.cpu_limit }}
            memory: {{ .Values.resources_api.memory_limit }}
        readinessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port:  {{ .Values.port }}
        livenessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port:  {{ .Values.port }}
      nodeSelector:
       # node:  {{ .Values.env }}
      imagePullSecrets:
      - name: regcred
