## Default values for Traefik
image: traefik
imageTag: 1.6.2
## can switch the service type to NodePort if required
serviceType: LoadBalancer
loadBalancerIP: 
# loadBalancerSourceRanges: []
whiteListSourceRange: []
externalTrafficPolicy: Cluster
replicas: 1

podDisruptionBudget: {}
  # maxUnavailable: 1
  # minAvailable: 2

cpuRequest: 100m
memoryRequest: 20Mi
cpuLimit: 100m
memoryLimit: 30Mi
debug:
  enabled: false

deploymentStrategy: {}
  # rollingUpdate:
  #   maxSurge: 1
  #   maxUnavailable: 0
  # type: RollingUpdate

nodeSelector: {}
  # key: value
affinity: {}
  # key: value
tolerations: []
# - key: "key"
#   operator: "Equal|Exists"
#   value: "value"
#   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
## Kubernetes ingress filters
# kubernetes:
  # namespaces:
  # - default
  # labelSelector:
  # ingressClass:
proxyProtocol:
  enabled: false
  # trustedIPs is required when enabled
  trustedIPs:
  # - 10.0.0.0/8
ssl:
  enabled: true
  enforced: true
  insecureSkipVerify: false
  # https://docs.traefik.io/configuration/entrypoints/#specify-minimum-tls-version
  # tlsMinVersion: VersionTLS12
  defaultCert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHVWpDQ0JUcWdBd0lCQWdJUVJncGZxZGs1RDRHL1dqd09nNTFYSWpBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQprREVMTUFrR0ExVUVCaE1DUjBJeEd6QVpCZ05WQkFnVEVrZHlaV0YwWlhJZ1RXRnVZMmhsYzNSbGNqRVFNQTRHDQpBMVVFQnhNSFUyRnNabTl5WkRFYU1CZ0dBMVVFQ2hNUlEwOU5UMFJQSUVOQklFeHBiV2wwWldReE5qQTBCZ05WDQpCQU1UTFVOUFRVOUVUeUJTVTBFZ1JHOXRZV2x1SUZaaGJHbGtZWFJwYjI0Z1UyVmpkWEpsSUZObGNuWmxjaUJEDQpRVEFlRncweE9EQTNNVFF3TURBd01EQmFGdzB4T1RBM01UUXlNelU1TlRsYU1Ga3hJVEFmQmdOVkJBc1RHRVJ2DQpiV0ZwYmlCRGIyNTBjbTlzSUZaaGJHbGtZWFJsWkRFZE1Cc0dBMVVFQ3hNVVVHOXphWFJwZG1WVFUwd2dWMmxzDQpaR05oY21ReEZUQVRCZ05WQkFNTURDb3VhMmx0YkdsakxtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEDQpnZ0VQQURDQ0FRb0NnZ0VCQU1naEVlN3hrUjFxUTlPRkVnb3RCdHROUElreStVdSt3QlB2VUFVNTZ3K1dDTVhQDQpOazgrRmtWclNsUlJiRS9HbVhmV1dCOXpEVEtDMFRTOUlmVVY3UEpVYXI4UUgrZGRkNklReHIwcWhsUXBPSjBuDQp0WTBQS2paTTdlMElNYUJrcXB5TlhPZWIvWmM2SWlIV0VUdVVzMU5uc09DdkdKaW9PdjlOUDFRSlBncW1tdWlNDQplYzBnTWV4TFpoU3JSOFJiT0F5TXEzbGlWaHVVNmx5ZGlxbk13OWVzVytGTlZJN0VHOUw0dHFQSDk1ZlZtOEk1DQpmS051dnhBd3l2aTBFY0hZQTFzY3J4ZjJBTk1iL05XQmtabGx6MjFuSEZnbmFtbjY4L010U3ZMVC9pcFhCSFRKDQowaU5DZW5QWmhtdXQyRUwwQlN4UGg1bHVIWERXWDZZc0ZxK1F0bTBDQXdFQUFhT0NBdHd3Z2dMWU1COEdBMVVkDQpJd1FZTUJhQUZKQ3ZhanFVV2d2WWtPb1NWblBmUTdRNktOcm5NQjBHQTFVZERnUVdCQlJFRGpaaVdpeUNsZlNXDQpVWHU4QStac3NjOE5vVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIU1VFDQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1R3WURWUjBnQkVnd1JqQTZCZ3NyQmdFRUFiSXhBUUlDDQpCekFyTUNrR0NDc0dBUVVGQndJQkZoMW9kSFJ3Y3pvdkwzTmxZM1Z5WlM1amIyMXZaRzh1WTI5dEwwTlFVekFJDQpCZ1puZ1F3QkFnRXdWQVlEVlIwZkJFMHdTekJKb0VlZ1JZWkRhSFIwY0RvdkwyTnliQzVqYjIxdlpHOWpZUzVqDQpiMjB2UTA5TlQwUlBVbE5CUkc5dFlXbHVWbUZzYVdSaGRHbHZibE5sWTNWeVpWTmxjblpsY2tOQkxtTnliRENCDQpoUVlJS3dZQkJRVUhBUUVFZVRCM01FOEdDQ3NHQVFVRkJ6QUNoa05vZEhSd09pOHZZM0owTG1OdmJXOWtiMk5oDQpMbU52YlM5RFQwMVBSRTlTVTBGRWIyMWhhVzVXWVd4cFpHRjBhVzl1VTJWamRYSmxVMlZ5ZG1WeVEwRXVZM0owDQpNQ1FHQ0NzR0FRVUZCekFCaGhob2RIUndPaTh2YjJOemNDNWpiMjF2Wkc5allTNWpiMjB3SXdZRFZSMFJCQnd3DQpHb0lNS2k1cmFXMXNhV011WTI5dGdncHJhVzFzYVdNdVkyOXRNSUlCQXdZS0t3WUJCQUhXZVFJRUFnU0I5QVNCDQo4UUR2QUhZQTdrdTl0M1hPWUxyaFFta2ZxK0dlWnFNUGZsK3djdGlEQU1SN2lYcW8vY3NBQUFGa2wrN3l0d0FBDQpCQU1BUnpCRkFpRUF5WFNjM0hrOUlzdUVEeE82N1poU2RFMlg3dUtsUm90R1lzUkFZaEcvOTR3Q0lCOFIvK3IzDQpQNCtDaVN5QW84aXkreDJSSU9zd0s3MVNlblhHOUVNOE9WQk1BSFVBZEg3YWd6R3RNeENSSVp6T0pVOUNjTUsvDQovVjVDSUFqR056VjU1aEI3ekZZQUFBRmtsKzd6QlFBQUJBTUFSakJFQWlBUWZOc1RzQm85ZlMzSTZEUHpjUDY1DQoydk4xTXo3MkdUS2F0Nm51Y1dqcHpRSWdhRUlnN3JaMnlTeFV1NlE2Zm5BTDZwR3ZnQlJrUFpTTFRWR08xMmhxDQpaZE13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNqM0VUdlAxYUh0Y1Y5RWkyYzM1anI0TnRBcWQrUlM5SVE1DQptOVJnWEhHcWJaajhXdEFZWTVXT1lPUFpWUm5KTnlqSjJxZnFqVXdzSittMFlUV2RvZzhmNzBhVkxTeEE4QVVlDQo5Q2JXdHN6L3p1V1RjTXU3RVh1OUxKcFNCdittYVJOb1NGYUlYRmZwK2VQVU40Q1ptSWNlOEIwdnR6TzhaRjZsDQpRZFZ3REVRaDhFOE5OL002aE9lQWVjRkhNWC9ReUphNm5DaEd4dFpaTmFFVktRYkw5MDJTQzM5MXBmdVZoempVDQpqTWIrUXFIdEVubkN4QXRWOTJyK0YwL25LK2RlODVyL2hGSURrUVY5VWx4U3FHTXJRdzhaNVY4RTlFZFBMdnkwDQpjalhZNzY5aTFEbTNKMm5SVGNVY2g2ZHdoaHp2Z0RGd095NFRYdFYzZHNNaHpjYVBtZWs9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  defaultKey: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tDQpNSUlFdkFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLWXdnZ1NpQWdFQUFvSUJBUURJSVJIdThaRWRha1BUDQpoUklLTFFiYlRUeUpNdmxMdnNBVDcxQUZPZXNQbGdqRnp6WlBQaFpGYTBwVVVXeFB4cGwzMWxnZmN3MHlndEUwDQp2U0gxRmV6eVZHcS9FQi9uWFhlaUVNYTlLb1pVS1RpZEo3V05EeW8yVE8zdENER2daS3FjalZ6bm0vMlhPaUloDQoxaEU3bExOVFo3RGdyeGlZcURyL1RUOVVDVDRLcHByb2pIbk5JREhzUzJZVXEwZkVXemdNakt0NVlsWWJsT3BjDQpuWXFwek1QWHJGdmhUVlNPeEJ2UytMYWp4L2VYMVp2Q09YeWpicjhRTU1yNHRCSEIyQU5iSEs4WDlnRFRHL3pWDQpnWkdaWmM5dFp4eFlKMnBwK3ZQekxVcnkwLzRxVndSMHlkSWpRbnB6MllacnJkaEM5QVVzVDRlWmJoMXcxbCttDQpMQmF2a0xadEFnTUJBQUVDZ2dFQUo5Mm1rK0dkRmEzNGF1ZEVLN0RDZitjSDJ4RERabHBPS3VwdUYweHRUY0tHDQpadGtiS1hmbHVkaGdpeUZaSVI4ZnJTYU9rVjA2ME1nTVlxUVdZcHNHZzFOYm5FbmJBUnkyV3h0YWE0NVFDZTNZDQpNRDRieFVpekVQUU1KVDZQbkRMUlpiUW5RSi9yU1RlMFd1Y29zYVN5Z0RmVW5UMWorZXp4SzdBNG9FWGpEUDIrDQo4OWIwL2VaSnNPN0RSWmo2SzRjUDFZaVArbjhxTmYvTVVoQkJ4SXorZlFtc3JOUmlINmgzTWcvbmwyZVlYUXBkDQpnN0ZZOUMvVVkxY1pCNmhqclNyUWROcTV5ay9jWXczWmV4TFdWYzRxQWs0dG55dGZFYUxLRHpvNDZmT0lNZE1mDQo4Tyt3cm5WOW1ya01nMHFkNW5uWjVxWm43VFRPM3o4cmcxem0xTXU2UlFLQmdRRHNqNUNqcStnamFVd2dGbSsvDQp5Um5rNm8xQTNiZUNuMDhIL1pHVmFETGgvTjYra0VXaVZQQUY2bkhNRGQ1RHQ3UEZnVk9YNUF2YllYWkFoTW8vDQo2Q3pLblR4WUJGaytJUnJyM25rVnJpRUJManBYTXJSamR6c2JhaDBxUVByalZlbDdWOVZSOGwvczg1Qlk1RzZuDQpGcGhCMm5ramwxaGpmem9QeGlaYVovOCtld0tCZ1FEWWt4dU1UYXI1dUxMQTlNdXFGNEg0TzFoR3BMUlNvUlJkDQpTUTJsMHBQaGlsSy9mRmlRNktkaEQ0SW9kM1Mzdyt0dUFsUEtqd09udHIxSFpNUkg2RCtoN3NkSlQyTnl4UEV4DQpHeS9BNldWbVovVnFFdHdiNUJDVlg0RlphOUI1VFBYVFBEZzRKSzlBNGhxajV6dG5XaUdzTmNVOW8rZ0k5K2VFDQp3RVJKRktHK053S0JnRkVXMFV6Wmc2U0gxcmwxRjI5VmZ4UFNOd05TUFRLQWEzWGd2TVBMU1EzZ1FYWnZPLzl1DQpRQ3kyOWJVdDE4KzhxOW42Lysya0ZWQnBNMERnZy9ldUhaU0NtNG5NUzg4WlNBSXNhN003MGtKMlZ6ZEd3VUVMDQpRTzZmekVtTXByUEE0bDBPZWFneWZpRmFTRlBBVWhIaWsrU1hBRWxyK3JkNGlDMmFEZEdWcm8vN0FvR0FQc0lLDQpOcEwvRzVRaEFIY3ZXVitzZ3ZFM2VHa2I4K0hIayt5cWJzWGhvbmJCMmNrL3BPWTJNcE1hNVgwUUxud3dpZFZVDQowSnEydFcvbjAzdG93V21VbnVraGlLWGZySTlUVVNhT3BQazlML3FxREEzaENKZ0RFalgxdHFMZWEzZ1l1Qmg0DQpOaFN6VURyMCswL3pUOVMzY3o2MXBGSU4yQ04yVEdxbW53TENoK3NDZ1lCZTMwaHBhSGp6eUtLVnVJZFpDVkJHDQpadTcrbndRK3hPRFFEcnJqQVI2SzU4aVo2WkdENEUwVklNTnFoZ21aenBXZUFjcjFzK0VTaUVESnlISEVXdExPDQp3SVlzYmNqSkovNHZvV3dIZy8zZjY2UjdlblcrVXV3UXVod0R6U3h6L21ucStmRDlGTnliTW1YYUYxa3MrV3haDQpJc2Q5TmUrUkVnYWNVYnBXaXNrNlBRPT0NCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
acme:
  enabled: false
  email: admin@example.com
  staging: true
  logging: false
  ## ACME challenge type: "tls-sni-01", "http-01" or "dns-01"
  ## Note the chart's default of tls-sni-01 has been DEPRECATED and (except in
  ## certain circumstances) DISABLED by Let's Encrypt. It remains as a default
  ## value in this chart to preserve legacy behavior and avoid a breaking
  ## change. Users of this chart should strongly consider making the switch to
  ## the dns-01 or http-01 (available since v1.5) challenge.
  challengeType: tls-sni-01
  ## Configure dnsProvider to perform domain verification using dns challenge
  ## Applicable only if using the dns-01 challenge type
  dnsProvider:
    name: nil
    auroradns:
      AURORA_USER_ID: ""
      AURORA_KEY: ""
      AURORA_ENDPOINT: ""
    azure:
      AZURE_CLIENT_ID: ""
      AZURE_CLIENT_SECRET: ""
      AZURE_SUBSCRIPTION_ID: ""
      AZURE_TENANT_ID: ""
      AZURE_RESOURCE_GROUP: ""
    cloudflare:
      CLOUDFLARE_EMAIL: ""
      CLOUDFLARE_API_KEY: ""
    digitalocean:
      DO_AUTH_TOKEN: ""
    dnsimple:
      DNSIMPLE_OAUTH_TOKEN: ""
      DNSIMPLE_BASE_URL: ""
    dnsmadeeasy:
      DNSMADEEASY_API_KEY: ""
      DNSMADEEASY_API_SECRET: ""
      DNSMADEEASY_SANDBOX: ""
    dnspod:
      DNSPOD_API_KEY: ""
    dyn:
      DYN_CUSTOMER_NAME: ""
      DYN_USER_NAME: ""
      DYN_PASSWORD: ""
    exoscale:
      EXOSCALE_API_KEY: ""
      EXOSCALE_API_SECRET: ""
      EXOSCALE_ENDPOINT: ""
    gandi:
      GANDI_API_KEY: ""
    godaddy:
      GODADDY_API_KEY: ""
      GODADDY_API_SECRET: ""
    gcloud:
      GCE_PROJECT: ""
      GCE_SERVICE_ACCOUNT_FILE: ""
    linode:
      LINODE_API_KEY: ""
    namecheap:
      NAMECHEAP_API_USER: ""
      NAMECHEAP_API_KEY: ""
    ns1:
      NS1_API_KEY: ""
    otc:
      OTC_DOMAIN_NAME: ""
      OTC_USER_NAME: ""
      OTC_PASSWORD: ""
      OTC_PROJECT_NAME: ""
      OTC_IDENTITY_ENDPOINT: ""
    pdns:
      PDNS_API_URL: ""
    rackspace:
      RACKSPACE_USER: ""
      RACKSPACE_API_KEY: ""
    rfc2136:
      RFC2136_NAMESERVER: ""
      RFC2136_TSIG_ALGORITHM: ""
      RFC2136_TSIG_KEY: ""
      RFC2136_TSIG_SECRET: ""
      RFC2136_TIMEOUT: ""
    route53:
      AWS_REGION: ""
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
    vultr:
      VULTR_API_KEY: ""
  ## Save ACME certs to a persistent volume. WARNING: If you do not do this, you will re-request
  ## certs every time a pod (re-)starts and you WILL be rate limited!
  persistence:
    enabled: true
    annotations: {}
    ## acme data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 1Gi
    ## A manually managed Persistent Volume Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    ##
    # existingClaim:
dashboard:
  enabled: false
  domain: traefik.example.com
  service:
    # annotations:
    #   key: value
  ingress:
    # annotations:
    #   key: value
    # labels:
    #   key: value
  auth:
    # basic:
    #   username: password
  statistics:
    ## Number of recent errors to show in the ‘Health’ tab
    # recentErrors:
service:
  # annotations:
  #   key: value
  # labels:
  #   key: value
  ## Further config for service of type NodePort
  ## Default config with empty string "" will assign a dynamic
  ## nodePort to http and https ports
  nodePorts:
    http: ""
    https: ""
  ## If static nodePort configuration is required it can be enabled as below
  ## Configure ports in allowable range (eg. 30000 - 32767 on minikube)
  # nodePorts:
  #   http: 30080
  #   https: 30443
gzip:
  enabled: true
accessLogs:
  enabled: false
  ## Path to the access logs file. If not provided, Traefik defaults it to stdout.
  # filePath: ""
  format: common  # choices are: common, json
rbac:
  enabled: false
## Enable the /metrics endpoint, for now only supports prometheus
## set to true to enable metric collection by prometheus
metrics:
  prometheus:
    enabled: false
    # buckets: [0.1,0.3,1.2,5]
  datadog:
    enabled: false
    # address: localhost:8125
    # pushinterval: 10s
  statsd:
    enabled: false
    # address: localhost:8125
    # pushinterval: 10s
deployment:
  # podAnnotations:
  #   key: value
  hostPort:
    httpEnabled: false
    httpsEnabled: false
    dashboardEnabled: false
sendAnonymousUsage: false
